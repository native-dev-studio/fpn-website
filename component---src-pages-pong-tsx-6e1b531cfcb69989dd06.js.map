{"version":3,"file":"component---src-pages-pong-tsx-6e1b531cfcb69989dd06.js","mappings":"uJA6CA,UArCiB,WAgCf,OA/BAA,EAAAA,WAAgB,WACd,IAAIC,EAAQC,SAASC,eAAe,SAChCC,EAAW,mHAEf,GADAC,QAAQC,IAAI,eACRL,EAEF,GADAI,QAAQC,IAAI,iBACRC,IAAAA,cAAmB,CACrBF,QAAQC,IAAI,oBACZ,IAAIE,EAAM,IAAID,KACdC,EAAIC,WAAWL,GACfI,EAAIE,YAAYT,QAeTA,EAAMU,YAAY,mCACzBN,QAAQC,IAAI,sBACZL,EAAMW,IAAMR,MAKhBJ,EAAAA,cAAAA,QAAAA,CAAOa,GAAG,QAAQC,UAAQ,EAACC,UAAQ","sources":["webpack://dream-fight/./src/pages/pong.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { Link } from 'gatsby';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport * as Pixi from \"pixi.js\";\nimport Hls from 'hls.js';\n\nconst PongPage = () => {\n  React.useEffect(() => {\n    var video = document.getElementById('video') as HTMLMediaElement;\n    var videoSrc = 'https://547f72e6652371c3.mediapackage.us-east-1.amazonaws.com/out/v1/28c261ccdfc94e1ca1925a4401ea4e48/index.m3u8';\n    console.log('starting...');\n    if (video) {\n      console.log(\"<video> found\");\n      if (Hls.isSupported()) {\n        console.log(\"hls is supported\");\n        var hls = new Hls();\n        hls.loadSource(videoSrc);\n        hls.attachMedia(video);\n      } \n      // HLS.js is not supported on platforms that do not have Media Source\n      // Extensions (MSE) enabled.\n      //\n      // When the browser has built-in HLS support (check using `canPlayType`),\n      // we can provide an HLS manifest (i.e. .m3u8 URL) directly to the video\n      // element through the `src` property. This is using the built-in support\n      // of the plain video element, without using HLS.js.\n      //\n      // Note: it would be more normal to wait on the 'canplay' event below however\n      // on Safari (where you are most likely to find built-in HLS support) the\n      // video.src URL must be on the user-driven white-list before a 'canplay'\n      // event will be emitted; the last video event that can be reliably\n      // listened-for when the URL is not on the white-list is 'loadedmetadata'.\n      else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n        console.log(\"video can play MSE\");\n        video.src = videoSrc;\n      }\n    }\n  });\n  return (\n    <video id=\"video\" autoPlay controls/>\n  );\n}\n\nexport default PongPage;\n"],"names":["React","video","document","getElementById","videoSrc","console","log","Hls","hls","loadSource","attachMedia","canPlayType","src","id","autoPlay","controls"],"sourceRoot":""}